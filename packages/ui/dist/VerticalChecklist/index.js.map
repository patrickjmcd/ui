{"version":3,"sources":["/Users/patrickjmcd/Developer/github/patrickjmcd/ui/packages/ui/dist/VerticalChecklist/index.js","../../src/components/VerticalChecklist/StatusIcon/index.tsx","../../src/components/VerticalChecklist/ChecklistItem/index.tsx","../../src/components/VerticalChecklist/index.tsx"],"names":["jsx"],"mappings":"AAAA,yGAA6B;AAC7B;AACA;ACMA,IAAM,WAAA,EAAa,CAAC,EAAE,IAAA,EAAM,kBAAA,EAAoB,oBAAoB,CAAA,EAAA,GAAuB;AACzF,EAAA,GAAA,CAAI,CAAC,CAAC,IAAA,EAAM;AACV,IAAA,OAAO,kBAAA;AAAA,EACT;AACA,EAAA,OAAO,mBAAA;AACT,CAAA;AAEA,IAAO,mBAAA,EAAQ,UAAA;ADLf;AACA;AEQI,+CAAA;AARJ,IAAM,sBAAA,EAAwB,CAAC;AAAA,EAC7B,SAAA;AAAA,EACA,aAAA;AAAA,EACA,cAAA;AAAA,EACA,KAAA;AAAA,EACA;AACF,CAAA,EAAA,GAAkC;AAChC,EAAA,uBACE,8BAAA,IAAC,EAAA,EAAG,SAAA,EAAU,YAAA,EACZ,QAAA,EAAA;AAAA,oBAAA,6BAAA,MAAC,EAAA,EAAK,SAAA,EAAU,wIAAA,EACd,QAAA,kBAAA,6BAAA,kBAAC,EAAA,EAAW,IAAA,EAAM,SAAA,EAAW,kBAAA,EAAoB,aAAA,EAAe,mBAAA,EAAqB,eAAA,CAAgB,EAAA,CACvG,CAAA;AAAA,oBACA,6BAAA,IAAC,EAAA,EAAG,SAAA,EAAU,0DAAA,EAA4D,QAAA,EAAA,MAAA,CAAM,CAAA;AAAA,IAC/E;AAAA,EAAA,EAAA,CACH,CAAA;AAEJ,CAAA;AAEA,IAAO,sBAAA,EAAQ,qBAAA;AFFf;AACA;AG1BA,sDAAyB;AAgBL;AAApB,IAAM,YAAA,kBAAcA,6BAAAA,iBAAC,EAAA,EAAS,SAAA,EAAW,wBAAA,CAAyB,CAAA;AAClE,IAAM,kBAAA,EAAoB,CAAC,KAAA,EAAA,GAAkC;AAC3D,EAAA,MAAM,EAAE,KAAA,EAAO,cAAA,EAAgB,cAAc,EAAA,EAAI,KAAA;AACjD,EAAA,uBACEA,6BAAAA,IAAC,EAAA,EAAG,SAAA,EAAU,wDAAA,EACX,QAAA,EAAA,KAAA,CAAM,GAAA,CAAI,CAAC,IAAA,EAAM,CAAA,EAAA,mBAChBA,6BAAAA;AAAA,IAAC,qBAAA;AAAA,IAAA;AAAA,MAEC,SAAA,EAAW,IAAA,CAAK,SAAA;AAAA,MAChB,aAAA,EAAe,IAAA,CAAK,cAAA,GAAiB,cAAA,GAAiB,WAAA;AAAA,MACtD,cAAA,EAAgB,IAAA,CAAK,eAAA,GAAkB,eAAA,GAAkB,WAAA;AAAA,MACzD,KAAA,EAAO,IAAA,CAAK,KAAA;AAAA,MAEX,QAAA,EAAA,IAAA,CAAK;AAAA,IAAA,CAAA;AAAA,IAND;AAAA,EAOP,CACD,EAAA,CACH,CAAA;AAEJ,CAAA;AAEA,IAAO,0BAAA,EAAQ,iBAAA;AHSf;AACE;AACF,4CAAC","file":"/Users/patrickjmcd/Developer/github/patrickjmcd/ui/packages/ui/dist/VerticalChecklist/index.js","sourcesContent":[null,"import React from \"react\";\n\ninterface StatusIconProps {\n  prop: unknown;\n  completedComponent: React.ReactElement;\n  incompleteComponent: React.ReactElement;\n}\n\nconst StatusIcon = ({ prop, completedComponent, incompleteComponent }: StatusIconProps) => {\n  if (!!prop) {\n    return completedComponent;\n  }\n  return incompleteComponent;\n};\n\nexport default StatusIcon;\n","import StatusIcon from \"../StatusIcon\";\nimport React from \"react\";\n\nexport interface VerticalChecklistItemProps {\n  condition: boolean;\n  completedIcon: React.ReactElement;\n  incompleteIcon: React.ReactElement;\n  title: string;\n  children: React.ReactNode;\n}\n\nconst VerticalChecklistItem = ({\n  condition,\n  completedIcon,\n  incompleteIcon,\n  title,\n  children,\n}: VerticalChecklistItemProps) => {\n  return (\n    <li className=\"mb-10 ms-6\">\n      <span className=\"absolute flex items-center justify-center w-6 h-6 bg-white rounded-full -start-3 ring-8 ring-white dark:ring-gray-900 dark:bg-gray-900\">\n        <StatusIcon prop={condition} completedComponent={completedIcon} incompleteComponent={incompleteIcon} />\n      </span>\n      <h3 className=\"mb-1 text-lg font-semibold text-gray-900 dark:text-white\">{title}</h3>\n      {children}\n    </li>\n  );\n};\n\nexport default VerticalChecklistItem;\n","import React from \"react\";\nimport ChecklistItem from \"./ChecklistItem\";\nimport { CubeIcon } from \"@heroicons/react/24/outline\";\n\ninterface ChecklistItemEntry {\n  condition: boolean;\n  title: string;\n  children: React.ReactNode;\n  completedIcon?: React.ReactElement;\n  incompleteIcon?: React.ReactElement;\n}\n\ninterface VerticalChecklistProps {\n  completedIcon?: React.ReactElement;\n  incompleteIcon?: React.ReactElement;\n  items: ChecklistItemEntry[];\n}\n\nconst defaultIcon = <CubeIcon className={\"w-6 h-6 fill-blue-700\"} />;\nconst VerticalChecklist = (props: VerticalChecklistProps) => {\n  const { items, incompleteIcon, completedIcon } = props;\n  return (\n    <ol className=\"relative border-s border-gray-200 dark:border-gray-700\">\n      {items.map((item, i) => (\n        <ChecklistItem\n          key={i}\n          condition={item.condition}\n          completedIcon={item.completedIcon || completedIcon || defaultIcon}\n          incompleteIcon={item.incompleteIcon || incompleteIcon || defaultIcon}\n          title={item.title}\n        >\n          {item.children}\n        </ChecklistItem>\n      ))}\n    </ol>\n  );\n};\n\nexport default VerticalChecklist;\n"]}